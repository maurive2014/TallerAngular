{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../serie.service\";\nimport * as i2 from \"@angular/common\";\nfunction SerieListComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const serie_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(serie_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(serie_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(serie_r1.channel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(serie_r1.seasons);\n  }\n}\n/**\n * The component for the list of series in the BookStore\n */\nexport class SerieListComponent {\n  /**\n   * Constructor for the component\n   * @param serieService The author's services provider\n   */\n  constructor(serieService) {\n    this.serieService = serieService;\n  }\n  /**\n   * Asks the service to update the list of series\n   */\n  getSeries() {}\n  getAverage() {\n    for (let serie of this.series) {\n      this.sumSeasons += serie.seasons;\n    }\n  }\n  /**\n   * This will initialize the component by retrieving the list of series from the service\n   * This method will be called when the component is created\n   */\n  ngOnInit() {\n    this.getSeries();\n    this.getAverage();\n    this.average = this.sumSeasons;\n  }\n  static #_ = this.ɵfac = function SerieListComponent_Factory(t) {\n    return new (t || SerieListComponent)(i0.ɵɵdirectiveInject(i1.SerieService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SerieListComponent,\n    selectors: [[\"list-serie\"]],\n    decls: 16,\n    vars: 2,\n    consts: [[1, \"table\"], [\"id\", \"series\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"content-end\"], [1, \"d-flex\", \"justify-content-start\"], [2, \"color\", \"blue\"]],\n    template: function SerieListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\");\n        i0.ɵɵtext(4, \"#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"th\");\n        i0.ɵɵtext(6, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\");\n        i0.ɵɵtext(8, \"Channel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Seasons\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"tbody\", 1);\n        i0.ɵɵtemplate(12, SerieListComponent_tr_12_Template, 10, 4, \"tr\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"div\", 4);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.series);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Seasons average: \", ctx.sumSeasons, \"\");\n      }\n    },\n    dependencies: [i2.NgForOf],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","serie_r1","id","name","channel","seasons","SerieListComponent","constructor","serieService","getSeries","getAverage","serie","series","sumSeasons","ngOnInit","average","_","ɵɵdirectiveInject","i1","SerieService","_2","selectors","decls","vars","consts","template","SerieListComponent_Template","rf","ctx","ɵɵtemplate","SerieListComponent_tr_12_Template","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["C:\\Users\\mauri\\OneDrive - Universidad de los Andes\\Documentos\\4 Semestre\\SW en equipo\\AplicaciónVacia\\mynewapp\\src\\app\\serie\\serie-list\\serie-list.component.ts","C:\\Users\\mauri\\OneDrive - Universidad de los Andes\\Documentos\\4 Semestre\\SW en equipo\\AplicaciónVacia\\mynewapp\\src\\app\\serie\\serie-list\\serie-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Serie } from '../serie';\nimport { SerieService } from '../serie.service';\n\n/**\n * The component for the list of series in the BookStore\n */\n@Component({\n    selector: 'list-serie',\n    templateUrl: './serie-list.component.html', \n})\nexport class SerieListComponent implements OnInit {\n\n    /**\n     * Constructor for the component\n     * @param serieService The author's services provider\n     */\n    constructor(private serieService: SerieService) { }\n    \n    /**\n     * The list of series which belong to the BookStore\n     */\n    series: Serie[];\n    sumSeasons: number;\n    average: number;\n\n    /**\n     * Asks the service to update the list of series\n     */\n    getSeries(): void {\n        \n    }\n\n    getAverage(): void {\n      \n      for (let serie of this.series) {\n        this.sumSeasons += serie.seasons;\n      }\n      \n    } \n\n\n    /**\n     * This will initialize the component by retrieving the list of series from the service\n     * This method will be called when the component is created\n     */\n    ngOnInit() {\n        this.getSeries();\n        this.getAverage();\n        this.average = this.sumSeasons;\n\n        \n    }\n}","<table class=\"table\">\n  <thead>\n      <tr>\n          <th>#</th>\n          <th>Name</th>\n          <th>Channel</th>\n          <th>Seasons</th>\n      </tr>\n  </thead>\n  <tbody id=\"series\">\n\n      <tr *ngFor = \"let serie of series\">\n        <td><strong>{{serie.id}}</strong></td>\n        <td style=\"color:blue;\">{{serie.name}}</td>\n        <td>{{serie.channel}}</td>\n        <td>{{serie.seasons}}</td>\n      </tr>\n\n  </tbody>\n</table>\n<div class=\"row content-end\">\n  <div class=\"d-flex justify-content-start\">Seasons average: {{sumSeasons}}</div>\n</div>"],"mappings":";;;;;ICWMA,EAAA,CAAAC,cAAA,SAAmC;IACrBD,EAAA,CAAAE,MAAA,GAAY;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACjCH,EAAA,CAAAC,cAAA,YAAwB;IAAAD,EAAA,CAAAE,MAAA,GAAc;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3CH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC1BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAHdH,EAAA,CAAAI,SAAA,GAAY;IAAZJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAC,EAAA,CAAY;IACAP,EAAA,CAAAI,SAAA,GAAc;IAAdJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAE,IAAA,CAAc;IAClCR,EAAA,CAAAI,SAAA,GAAiB;IAAjBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAG,OAAA,CAAiB;IACjBT,EAAA,CAAAI,SAAA,GAAiB;IAAjBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAI,OAAA,CAAiB;;;ADX7B;;;AAOA,OAAM,MAAOC,kBAAkB;EAE3B;;;;EAIAC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;EAAkB;EASlD;;;EAGAC,SAASA,CAAA,GAET;EAEAC,UAAUA,CAAA;IAER,KAAK,IAAIC,KAAK,IAAI,IAAI,CAACC,MAAM,EAAE;MAC7B,IAAI,CAACC,UAAU,IAAIF,KAAK,CAACN,OAAO;;EAGpC;EAGA;;;;EAIAS,QAAQA,CAAA;IACJ,IAAI,CAACL,SAAS,EAAE;IAChB,IAAI,CAACC,UAAU,EAAE;IACjB,IAAI,CAACK,OAAO,GAAG,IAAI,CAACF,UAAU;EAGlC;EAAC,QAAAG,CAAA,G;qBAzCQV,kBAAkB,EAAAX,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBd,kBAAkB;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX/BhC,EAAA,CAAAC,cAAA,eAAqB;QAGPD,EAAA,CAAAE,MAAA,QAAC;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACVH,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,WAAI;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACbH,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,cAAO;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAChBH,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGxBH,EAAA,CAAAC,cAAA,gBAAmB;QAEfD,EAAA,CAAAkC,UAAA,KAAAC,iCAAA,iBAKK;QAETnC,EAAA,CAAAG,YAAA,EAAQ;QAEVH,EAAA,CAAAC,cAAA,cAA6B;QACeD,EAAA,CAAAE,MAAA,IAA+B;QAAAF,EAAA,CAAAG,YAAA,EAAM;;;QAVnDH,EAAA,CAAAI,SAAA,IAAS;QAATJ,EAAA,CAAAoC,UAAA,YAAAH,GAAA,CAAAhB,MAAA,CAAS;QAUKjB,EAAA,CAAAI,SAAA,GAA+B;QAA/BJ,EAAA,CAAAqC,kBAAA,sBAAAJ,GAAA,CAAAf,UAAA,KAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}